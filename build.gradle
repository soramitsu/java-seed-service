plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'jp.co.soramitsu'
version = '123'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

final def lombokVersion = '1.18.4'

ext {
    set('springCloudVersion', 'Greenwich.RELEASE')
}

dependencies {
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")

    // main dependency for SPRING
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // defines metrics for this service
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // main dependency for JPA databases
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    // in-memory database
    implementation("com.h2database:h2")

    // to support @ConfigurationProperties
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

    // consul auto configuration
    implementation("org.springframework.cloud:spring-cloud-starter-consul-config")

    // consul auto service discovery
    implementation("org.springframework.cloud:spring-cloud-starter-consul-discovery")

    // init config with vault
    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
    implementation 'org.springframework.cloud:spring-cloud-vault-config-consul'

//	implementation 'org.springframework.cloud:spring-cloud-vault-config-consul'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


}


compileJava.dependsOn(processResources)


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"

        // for Vault
//        mavenBom "org.springframework.cloud:spring-cloud-vault-dependencies:${springCloudVersion}"
    }
}


repositories {
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}
